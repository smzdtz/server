// Generated by https://quicktype.io
package eastmoney

import (
	"context"
	"smzdtz-server/utils"
)

type RespTrends struct {
	RC   int64 `json:"rc"`
	Rt   int64 `json:"rt"`
	Svr  int64 `json:"svr"`
	Lt   int64 `json:"lt"`
	Full int64 `json:"full"`
	Data Data  `json:"data"`
}

type Data struct {
	Code          string   `json:"code"`
	Market        int64    `json:"market"`
	Type          int64    `json:"type"`
	Status        int64    `json:"status"`
	Name          string   `json:"name"`
	Decimal       int64    `json:"decimal"`
	PreSettlement float64  `json:"preSettlement"`
	PreClose      float64  `json:"preClose"`
	Beticks       string   `json:"beticks"`
	TrendsTotal   int64    `json:"trendsTotal"`
	Time          int64    `json:"time"`
	Kind          int64    `json:"kind"`
	PrePrice      float64  `json:"prePrice"`
	Trends        []string `json:"trends"`
}

func (e EastMoney) QueryStockTrends(ctx context.Context, secid string) (RespTrends, error) {
	apiurl := "https://push2.eastmoney.com/api/qt/stock/trends2/get"
	params := map[string]string{
		"secid":   secid,
		"fields1": "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13",
		"fields2": "f51,f52,f53,f54,f55,f56,f57,f58",
	}
	apiurl, err := utils.NewHTTPGetURLWithQueryString(ctx, apiurl, params)
	if err != nil {
		return RespTrends{}, err
	}
	resp := RespTrends{}
	err = utils.HTTPGET(ctx, e.HTTPClient, apiurl, nil, &resp)
	if err != nil {
		return RespTrends{}, err
	}
	return resp, nil
}
